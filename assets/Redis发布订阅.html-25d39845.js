import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as l,b as e,e as t,d as s,f as d}from"./app-0262c20c.js";const o={},c=d(`<table><thead><tr><th>版本</th><th>内容</th><th>时间</th></tr></thead><tbody><tr><td>V1</td><td>新增</td><td>2023-04-19 01:01:12</td></tr></tbody></table><p>本文参考：</p><ul><li>https://redis.io/docs/manual/pubsub/</li></ul><h2 id="发布订阅概述" tabindex="-1"><a class="header-anchor" href="#发布订阅概述" aria-hidden="true">#</a> 发布订阅概述</h2><p>Redis 提供了基于“发布/订阅”模式的消息机制，让客户端（消息发布者）通过广播的方式，将消息同步发送给可能存在的多个客户端（订阅者），并且消息发布的客户端不需要知道接收消息的客户端的具体信息。</p><ul><li><strong>订阅者（subscriber）</strong>：客户端通过订阅特定的频道（channel）来接收发送给该频道的消息；</li><li><strong>发送者（publisher）</strong>：客户端通过向频道（channel）发送消息，传递给对应的订阅者；</li></ul><p><strong>一个频道（channel）可以由任意多个订阅者（subscriber），一个订阅者（subscriber）也可以同时订阅任意多个频道（channel）。</strong></p><p>除了订阅指定的 channel 外，还可以订阅模式（pattern）来接收消息：每当发布者向某个 channel 发送消息的时候，不仅 channel 的订阅者会收到消息，与 channel 匹配的所有模式的订阅者也会收到消息。</p><p>例如现在有一个频道名为 channel.test，订阅者 A 订阅了这个频道，同时订阅者 B 订阅了 channel* 这个频道。假如现在给 channel.test 频道发送消息，订阅者 A 和 B 都会收到消息。</p><h2 id="发布订阅相关的命令" tabindex="-1"><a class="header-anchor" href="#发布订阅相关的命令" aria-hidden="true">#</a> 发布订阅相关的命令</h2><table><thead><tr><th>命令</th><th>含义</th><th>使用方式</th></tr></thead><tbody><tr><td>PUBLISH</td><td>向频道发送消息</td><td>PUBLISH channel message</td></tr><tr><td>SUBSCRIBE</td><td>订阅指定频道</td><td>SUBSCRIBE channel [channel ...]</td></tr><tr><td>UNSUBSCRIBE</td><td>取消订阅指定频道<br>无参表示取消订阅所有频道</td><td>UNSUBSCRIBE [channel [channel ...]]</td></tr><tr><td>PSUBSCRIBE</td><td>按照模式订阅</td><td>PSUBSCRIBE pattern [pattern ...]</td></tr><tr><td>PUNSUBSCRIBE</td><td>取消按照模式订阅</td><td>PUNSUBSCRIBE [pattern [pattern ...]]</td></tr><tr><td>PUBSUB CHANNELS</td><td>查看当前订阅的所有频道</td><td>PUBSUB CHANNELS [pattern]</td></tr><tr><td>PUBSUB NUMSUB</td><td>查看给定频道的订阅者数量</td><td>PUBSUB NUMSUB [channel [channel ...]]</td></tr><tr><td>PUBSUB NUMPAT</td><td>查看按照模式订阅的总数量</td><td>PUBSUB NUMPAT</td></tr><tr><td>PUBSUB SHARDCHANNELS</td><td>查看当前的分片频道，<br>7.0.0 版本新增</td><td>PUBSUB SHARDCHANNELS [pattern]</td></tr><tr><td>PUBSUB SHARDNUMSUB</td><td>查看指定分片频道的订阅者数量，<br>7.0.0 版本新增</td><td>PUBSUB SHARDNUMSUB [shardchannel [shardchannel ...]]</td></tr><tr><td>SPUBLISH</td><td>给分片频道发送消息<br>7.0.0 版本新增</td><td>SPUBLISH shardchannel message</td></tr><tr><td>SSUBSCRIBE</td><td>订阅分片频道<br>7.0.0 版本新增</td><td>SSUBSCRIBE shardchannel [shardchannel ...]</td></tr><tr><td>SUNSUBSCRIBE</td><td>取消订阅分片频道<br>7.0.0 版本新增</td><td>SUNSUBSCRIBE [shardchannel [shardchannel ...]]</td></tr></tbody></table><h3 id="简单的发布订阅" tabindex="-1"><a class="header-anchor" href="#简单的发布订阅" aria-hidden="true">#</a> 简单的发布订阅</h3><p>开启两个客户端订阅，客户端 A 订阅 test1 频道，客户端 B 订阅 test1 和 test2 频道</p><h4 id="subscribe-订阅消息" tabindex="-1"><a class="header-anchor" href="#subscribe-订阅消息" aria-hidden="true">#</a> SUBSCRIBE 订阅消息</h4><p><strong>客户端订阅一个或多个频道</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SUBSCRIBE channel [channel ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回值：每次订阅成功一个频道后，都会想执行命令的客户端返回一条订阅信息</p><ol><li>第一个元素：subscribe，表示是 SUBSCRIBE 命令的订阅消息；</li><li>第二个元素：表示被订阅的频道的名字；</li><li>第三个元素：表示当前客户端订阅了多少个频道；</li></ol>`,18),u=e("code",null,"SUBSCRIBE",-1),h={href:"https://redis.io/commands/ssubscribe",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"SSUBSCRIBE",-1),v={href:"https://redis.io/commands/psubscribe",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"PSUBSCRIBE",-1),m={href:"https://redis.io/commands/unsubscribe",target:"_blank",rel:"noopener noreferrer"},S=e("code",null,"UNSUBSCRIBE",-1),B={href:"https://redis.io/commands/sunsubscribe",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"SUNSUBSCRIBE",-1),U={href:"https://redis.io/commands/punsubscribe",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"PUNSUBSCRIBE",-1),x={href:"https://redis.io/commands/ping",target:"_blank",rel:"noopener noreferrer"},C=e("code",null,"PING",-1),R={href:"https://redis.io/commands/reset",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"RESET",-1),I={href:"https://redis.io/commands/quit",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"QUIT",-1),q=e("p",null,"但是，如果使用 RESP3（请参阅 HELLO 命令），则客户端可以在订阅状态下发出任何命令。",-1),N=e("p",null,"https://redis.io/commands/hello/",-1),P=e("code",null,">= 6.2.0",-1),k={href:"https://redis.io/commands/reset",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"RESET",-1),H=d(`<p>客户端 A 订阅 test1 频道</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; SUBSCRIBE test1
Reading messages... (press Ctrl-C to quit)
1) &quot;subscribe&quot;
2) &quot;test1&quot;
3) (integer) 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端 B 订阅 test1 和 test2 频道</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; SUBSCRIBE test1 test2
Reading messages... (press Ctrl-C to quit)
1) &quot;subscribe&quot;
2) &quot;test1&quot;
3) (integer) 1
1) &quot;subscribe&quot;
2) &quot;test2&quot;
3) (integer) 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="publish-发布消息" tabindex="-1"><a class="header-anchor" href="#publish-发布消息" aria-hidden="true">#</a> PUBLISH 发布消息</h4><p>客户端发布消息到频道</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SUBSCRIBE channel [channel ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回值：<strong>命令的返回值表示有多少个订阅者接收到了这条消息。</strong></p><p>TODO-KWOK 集群模式的限制</p><p>开启一个新的客户端给 test1 通道发消息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; PUBLISH test1 hello-test1
(integer) 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端 A 的情况，接收到了消息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; SUBSCRIBE test1 test2
Reading messages... (press Ctrl-C to quit)
...
...
1) &quot;message&quot;
2) &quot;test1&quot;
3) &quot;hello-test1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端 B 的情况，接收到了消息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; SUBSCRIBE test1
Reading messages... (press Ctrl-C to quit)
...
...
1) &quot;message&quot;
2) &quot;test1&quot;
3) &quot;hello-test1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>接收频道消息的信息</strong></p><ol><li>第一个元素：message，表明该消息是一个频道消息；</li><li>第二个元素：表示消息来自于那个频道；</li><li>第三个元素：表示真正的消息内容；</li></ol><p>发布者给 test2 发消息，只会有客户端 B 接收到消息，可自行测试。</p><h4 id="unsubscribe-取消订阅频道" tabindex="-1"><a class="header-anchor" href="#unsubscribe-取消订阅频道" aria-hidden="true">#</a> UNSUBSCRIBE 取消订阅频道</h4><p><strong>取消订阅给定频道，如果没有给定频道名称，则取消订阅以前订阅的所有频道。</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>UNSUBSCRIBE [channel [channel ...]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回值：</p><ol><li>第一个元素：unsubscribe，表面该消息是一条取消订阅的消息；</li><li>第二个元素：表示取消订阅频道的名字；</li><li>第三个元素：表示客户端在执行取消订阅操作后，目前仍在订阅的频道数量；</li></ol><p>新开一个客户端，取消订阅 test1 频道（为什么新开客户端，后面会说）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; UNSUBSCRIBE test1
1) &quot;unsubscribe&quot;
2) &quot;test1&quot;
3) (integer) 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，虽然 Redis 提供了 UNSUBSCRIBE 命令来取消订阅频道，但是 <strong>Redis 各个客户端对 Pub/Sub 功能的支持方式并不相同，所以并非所有客户端都能使用 UNSUBSCRIBE 来执行取消订阅操作</strong>。例如 Redis 自带的 redis-cli 客户端在执行 SUBSCRIBE 命令之后就会进入阻塞状态，无法再执行其他命令，用户只能 Ctrl-C 退出 redis-cli，所以 redis-cli 客户端并不支持使用 UNSUBSCRIBE 命令。</p><h3 id="按照模式订阅" tabindex="-1"><a class="header-anchor" href="#按照模式订阅" aria-hidden="true">#</a> 按照模式订阅</h3><h4 id="psubscribe-订阅消息" tabindex="-1"><a class="header-anchor" href="#psubscribe-订阅消息" aria-hidden="true">#</a> PSUBSCRIBE 订阅消息</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PSUBSCRIBE pattern [pattern ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按照模式订阅，支持 glob-style 匹配</p><ul><li><code>h?llo</code>，会订阅 <code>hello</code>, <code>hallo</code> 和 <code>hxllo</code> 频道；</li><li><code>h*llo</code> ，会订阅 <code>hllo</code> 和 <code>heeeello</code> 频道；</li><li><code>h[ae]llo</code> ，会订阅 <code>hello</code> 和 <code>hallo</code>频道 ，但是不会 <code>hillo</code> 频道；</li></ul>`,31),L=e("code",null,"SUBSCRIBE",-1),T={href:"https://redis.io/commands/ssubscribe",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"SSUBSCRIBE",-1),O={href:"https://redis.io/commands/psubscribe",target:"_blank",rel:"noopener noreferrer"},D=e("code",null,"PSUBSCRIBE",-1),K={href:"https://redis.io/commands/unsubscribe",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"UNSUBSCRIBE",-1),V={href:"https://redis.io/commands/sunsubscribe",target:"_blank",rel:"noopener noreferrer"},W=e("code",null,"SUNSUBSCRIBE",-1),G={href:"https://redis.io/commands/punsubscribe",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"PUNSUBSCRIBE",-1),j={href:"https://redis.io/commands/ping",target:"_blank",rel:"noopener noreferrer"},w=e("code",null,"PING",-1),z={href:"https://redis.io/commands/reset",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"RESET",-1),J={href:"https://redis.io/commands/quit",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"QUIT",-1),Y=d(`<p>新开一个客户端订阅模式 <code>test*</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; PSUBSCRIBE test*
Reading messages... (press Ctrl-C to quit)
1) &quot;psubscribe&quot;
2) &quot;test*&quot;
3) (integer) 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><ul><li>第一个元素：psubscribe，表明消息是是由 PSUBSCRIBE 发起的一个订阅消息；</li><li>第二个元素：被订阅的模式；</li><li>第三个元素：客户端目前订阅模式的数量；</li></ul><p>此时另一个客户端发送给 test1 频道发送一个消息，当前客户端会接收到消息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; PSUBSCRIBE test*
Reading messages... (press Ctrl-C to quit)
...
...
1) &quot;pmessage&quot;
2) &quot;test*&quot;
3) &quot;test2&quot;
4) &quot;hello-test-pattern&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><ul><li>第一个元素：pmessage，表示这是一条模式消息而不是订阅消息或频道消息；</li><li>第二个元素：被匹配的模式；</li><li>第三个元素：与模式相匹配的频道；</li><li>第四个元素：消息的内容；</li></ul>`,8),Z=e("code",null,">= 6.2.0",-1),$={href:"https://redis.io/commands/reset",target:"_blank",rel:"noopener noreferrer"},ee=e("code",null,"RESET",-1),te=d(`<h4 id="unsubscribe-取消订阅消息" tabindex="-1"><a class="header-anchor" href="#unsubscribe-取消订阅消息" aria-hidden="true">#</a> UNSUBSCRIBE 取消订阅消息</h4><p>取消订阅给定模式，无参表示取消订阅所有模式。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PUNSUBSCRIBE [pattern [pattern ...]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>和 UNSUBSCRIBE 命令一样，<strong>Redis 各个客户端对 Pub/Sub 功能的支持方式并不相同，所以并非所有客户端都能使用 PUNSUBSCRIBE 来执行取消订阅模式操作</strong>。例如 Redis 自带的 redis-cli 客户端在执行 PSUBSCRIBE 命令之后就会进入阻塞状态，无法再执行其他命令，用户只能 Ctrl-C 退出 redis-cli，所以 redis-cli 客户端并不支持使用 PUNSUBSCRIBE 命令。</p><p>UNSUBSCRIBE 命令的返回值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; PUNSUBSCRIBE test*
1) &quot;punsubscribe&quot;
2) &quot;test*&quot;
3) (integer) 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><ul><li>第一个元素：punsubscribe，表明该消息是 PUNSUBSCRIBE 命令的一个取消订阅模式的消息；</li><li>第二个元素：被取消订阅的模式；</li><li>第三个元素：客户端在执行当前取消订阅的操作后，仍在订阅的模式数量；</li></ul><h3 id="pubsub-查看发布订阅的相关信息" tabindex="-1"><a class="header-anchor" href="#pubsub-查看发布订阅的相关信息" aria-hidden="true">#</a> PUBSUB 查看发布订阅的相关信息</h3><h4 id="pubsub-channels-查看订阅的频道" tabindex="-1"><a class="header-anchor" href="#pubsub-channels-查看订阅的频道" aria-hidden="true">#</a> PUBSUB CHANNELS 查看订阅的频道</h4><p>列出目前被订阅的所有频道，如果给定了可选的 pattern 参数，那么只会列出与给定 pattern 匹配的频道。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PUBSUB CHANNELS [pattern]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; pubsub channels
1) &quot;test2&quot;
2) &quot;test1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TODO-KWOK 集群问题</p><h4 id="pubsub-numsub-查看频道的订阅者数量" tabindex="-1"><a class="header-anchor" href="#pubsub-numsub-查看频道的订阅者数量" aria-hidden="true">#</a> PUBSUB NUMSUB 查看频道的订阅者数量</h4><p>查看任意多个频道的订阅者数量（不包括订阅模式的客户端）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PUBSUB NUMSUB [channel [channel ...]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; pubsub numsub test1 test2
1) &quot;test1&quot;
2) (integer) 2
3) &quot;test2&quot;
4) (integer) 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TODO-KWOK 集群问题</p><h4 id="pubsub-numpat-查看订阅模式的总数量" tabindex="-1"><a class="header-anchor" href="#pubsub-numpat-查看订阅模式的总数量" aria-hidden="true">#</a> PUBSUB NUMPAT 查看订阅模式的总数量</h4><p>查看当前被订阅模式的总数量（使用 PSUBSCRIBE 命令执行）。请注意，这不是订阅模式的客户端数量，而是所有客户端订阅的唯一模式的总数。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PUBSUB NUMPAT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; pubsub numpat
(integer) 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同时匹配模式和频道订阅的问题" tabindex="-1"><a class="header-anchor" href="#同时匹配模式和频道订阅的问题" aria-hidden="true">#</a> 同时匹配模式和频道订阅的问题</h3><p>如果客户端订阅了与已发布消息匹配的多个模式，或者如果它订阅了与消息匹配的模式和通道，则客户端可能会多次收到同一条消息。</p><ul><li>如果订阅者订阅了多个与发布消息的频道匹配的模式，客户端可能会多次收到同一条消息；</li><li>如果订阅者订阅了一个频道，又订阅了一个匹配这个频道的模式，客户端可能会多次收到同一条消息；</li></ul><p>例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SUBSCRIBE foo
PSUBSCRIBE f*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的示例中，如果将消息发送到频道 foo，则客户端将收到两条消息：一条是 message 类型，一条是 pmessage 类型。</p>`,29);function ne(se,de){const n=a("ExternalLinkIcon");return r(),l("div",null,[c,e("p",null,[t("需要注意的是：一旦客户端进入订阅状态，除开 "),u,t(", "),e("a",h,[b,s(n)]),t(", "),e("a",v,[p,s(n)]),t(", "),e("a",m,[S,s(n)]),t(", "),e("a",B,[g,s(n)]),t(", "),e("a",U,[_,s(n)]),t(", "),e("a",x,[C,s(n)]),t(", "),e("a",R,[E,s(n)]),t(" 和 "),e("a",I,[f,s(n)]),t(" 命令，其它命令都不接受。")]),e("blockquote",null,[q,N,e("p",null,[P,t(": "),e("a",k,[A,s(n)]),t(" can be called to exit subscribed state.")])]),H,e("p",null,[t("需要注意的是：一旦客户端进入订阅状态，除开 "),L,t(", "),e("a",T,[M,s(n)]),t(", "),e("a",O,[D,s(n)]),t(", "),e("a",K,[y,s(n)]),t(", "),e("a",V,[W,s(n)]),t(", "),e("a",G,[Q,s(n)]),t(", "),e("a",j,[w,s(n)]),t(", "),e("a",z,[F,s(n)]),t(" 和 "),e("a",J,[X,s(n)]),t(" 命令，其它命令都不接受。")]),Y,e("blockquote",null,[e("ul",null,[e("li",null,[Z,t(": "),e("a",$,[ee,s(n)]),t(" can be called to exit subscribed state.")])])]),te])}const re=i(o,[["render",ne],["__file","Redis发布订阅.html.vue"]]);export{re as default};
