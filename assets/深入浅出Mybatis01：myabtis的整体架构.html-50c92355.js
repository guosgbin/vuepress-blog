import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as a,f as l}from"./app-1d017c6a.js";const s="/assets/Mybatis整体架构-8528477e.png",e="/assets/Mybatis整体执行流程-a139c2f4.png",r={},o=l('<table><thead><tr><th>版本</th><th>内容</th><th>时间</th></tr></thead><tbody><tr><td>V1</td><td>新增</td><td>2021年6月6日18:34:32</td></tr><tr><td>V2</td><td>文案修改</td><td>2023年3月5日11:35:44</td></tr></tbody></table><p>主要讲述 Mybatis 的整体架构，给出每个包的作用，并阐明本次源码阅读的顺序。</p><h2 id="mybatis-整体架构" tabindex="-1"><a class="header-anchor" href="#mybatis-整体架构" aria-hidden="true">#</a> Mybatis 整体架构</h2><p><img src="'+s+'" alt="Mybatis整体架构"></p><h2 id="mybatis-各个包的作用" tabindex="-1"><a class="header-anchor" href="#mybatis-各个包的作用" aria-hidden="true">#</a> Mybatis 各个包的作用</h2><p><strong>基础功能包</strong>：</p><ol><li>exception：为 mybatis 提供了大部分异常类的父类和异常类的生产工厂；</li><li>reflection：为 myabtis 提供反射功能的 API，方便上层调用；</li><li>annotations：注解包，为 mybatis 增加了注解开发的功能；</li><li>lang：注解包，只有两个注解；</li><li>type：提供 JDBC 类型和 Java 类型转换的功能，提供了别名配置；</li><li>io：负责完成 mybatis 中对磁盘文件读操作；</li><li>logging：日志包，能够集成多种第三方日志框架；</li><li>parsing：xml 解析包；</li></ol><p><strong>配置解析包</strong>：</p><ol><li>binding：处理 Java 方法和 SQL 语句之间的绑定关系；</li><li>builder：解析 xml 配置文件和映射文件，解析注解形式的 Mapper 声明；</li><li>mapping：此包有以下功能 <ol><li>SQL 语句处理功能；</li><li>输出结果处理功能；</li><li>输入参数处理功能；</li><li>多数据库种类处理功能；</li></ol></li><li>scripting：动态SQL；</li><li>datasource：完成数据源的获取、数据连接等工作；</li></ol><p><strong>核心操作包</strong>：</p><ol><li>jdbc：提供数据库操作语句的执行能力和脚本执行能力；</li><li>cache：缓存包；</li><li>transaction：提供事务管理。一种基于 JDBC 的事务管理，另一种基于容器进行事务管理；</li><li>cursor：提供游标查询的功能；</li><li>executor：执行器包，用于处理 session 包的请求；</li><li>session：门面模式 提供一个统一的门面接口 API，使得系统更容易使用；</li><li>plugin：插件包；</li></ol><h2 id="此次源码阅读顺序" tabindex="-1"><a class="header-anchor" href="#此次源码阅读顺序" aria-hidden="true">#</a> 此次源码阅读顺序</h2><p>Mybatis 的主要作用就是简化传统的 JDBC的操作，也就是说 Mybatis 就是给 JDBC 操作封装好方便我们使用。</p><p>此次阅读Mybatis源码主要围绕 SQL 的执行流程，直接学习核心流程，然后再去学习核心流程牵扯到了那些技术要点。</p><img src="'+e+'" alt="Mybatis整体执行流程" style="zoom:67%;"><p>在 SQL 执行流程中有四个重要的组件，这个四个组件分别是，执行器(Executor)、SQL 处理器(StatementHandler)、参数处理器(ParameterHandler)、结果集处理器(ResultSetHandler)。</p>',16),n=[o];function d(c,p){return t(),a("div",null,n)}const _=i(r,[["render",d],["__file","深入浅出Mybatis01：myabtis的整体架构.html.vue"]]);export{_ as default};
