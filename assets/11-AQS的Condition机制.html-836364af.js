const t=JSON.parse('{"key":"v-121a4230","path":"/JDK_source/11-AQS%E7%9A%84Condition%E6%9C%BA%E5%88%B6.html","title":"11-AQS的Condition机制","lang":"zh-CN","frontmatter":{"title":"11-AQS的Condition机制","description":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年09月14日22:50:30 概述 Synchronized 同步锁在同步代码块中可以通过锁对象的 wait 和 notify 方法来实现线程同步。 对于 JUC 中的 Condition 接口，配合 Lock 锁也可以实现线程同步，通过 Cond...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/JDK_source/11-AQS%E7%9A%84Condition%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:title","content":"11-AQS的Condition机制"}],["meta",{"property":"og:description","content":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年09月14日22:50:30 概述 Synchronized 同步锁在同步代码块中可以通过锁对象的 wait 和 notify 方法来实现线程同步。 对于 JUC 中的 Condition 接口，配合 Lock 锁也可以实现线程同步，通过 Cond..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.guosgbin.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-04T02:26:04.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"11-AQS的Condition机制"}],["meta",{"property":"article:author","content":"超威蓝猫 Dylan Kwok"}],["meta",{"property":"article:modified_time","content":"2023-05-04T02:26:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11-AQS的Condition机制\\",\\"image\\":[\\"https://blog.guosgbin.cn/\\"],\\"dateModified\\":\\"2023-05-04T02:26:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Condition 接口介绍","slug":"condition-接口介绍","link":"#condition-接口介绍","children":[]},{"level":2,"title":"Condition 官方案例","slug":"condition-官方案例","link":"#condition-官方案例","children":[]},{"level":2,"title":"Condition 源码分析","slug":"condition-源码分析","link":"#condition-源码分析","children":[{"level":3,"title":"ConditionObject 的创建","slug":"conditionobject-的创建","link":"#conditionobject-的创建","children":[]},{"level":3,"title":"条件队列介绍","slug":"条件队列介绍","link":"#条件队列介绍","children":[]},{"level":3,"title":"ConditionObject 的属性","slug":"conditionobject-的属性","link":"#conditionobject-的属性","children":[]},{"level":3,"title":"await 方法阻塞前代码分析","slug":"await-方法阻塞前代码分析","link":"#await-方法阻塞前代码分析","children":[]},{"level":3,"title":"signal 唤醒线程","slug":"signal-唤醒线程","link":"#signal-唤醒线程","children":[]},{"level":3,"title":"await 方法里被唤醒后的代码分析","slug":"await-方法里被唤醒后的代码分析","link":"#await-方法里被唤醒后的代码分析","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1683167164000,"updatedTime":1683167164000,"contributors":[{"name":"Dylan Kwok","email":"guosgbin@163.com","commits":1}]},"readingTime":{"minutes":12.09,"words":3626},"filePathRelative":"JDK_source/11-AQS的Condition机制.md","localizedDate":"2023年5月4日","copyright":{"author":"超威蓝猫 Dylan Kwok"},"autoDesc":true}');export{t as data};
