const e=JSON.parse('{"key":"v-31ed7196","path":"/Netty_source/16-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A4%84%E7%90%86READ%E4%BA%8B%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8ARecvByteBufAllocator.html","title":"16-客户端处理READ事件详解及RecvByteBufAllocator","lang":"zh-CN","frontmatter":{"title":"16-客户端处理READ事件详解及RecvByteBufAllocator","date":"2022-02-23T18:34:24.000Z","tags":["Netty"],"categories":["Netty"],"description":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年2月18日18:34:24 V2 重构 2023年05月27日14:28:26 分析顺序 想要理明白客户端处理 READ 事件的读循环，必须了解 AdaptiveRecvByteBufAllocator 和 MaxMessageHandle 这两个...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/Netty_source/16-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A4%84%E7%90%86READ%E4%BA%8B%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8ARecvByteBufAllocator.html"}],["meta",{"property":"og:title","content":"16-客户端处理READ事件详解及RecvByteBufAllocator"}],["meta",{"property":"og:description","content":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年2月18日18:34:24 V2 重构 2023年05月27日14:28:26 分析顺序 想要理明白客户端处理 READ 事件的读循环，必须了解 AdaptiveRecvByteBufAllocator 和 MaxMessageHandle 这两个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.guosgbin.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-04T09:46:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"16-客户端处理READ事件详解及RecvByteBufAllocator"}],["meta",{"property":"article:author","content":"超威蓝猫 Dylan Kwok"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:published_time","content":"2022-02-23T18:34:24.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-04T09:46:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"16-客户端处理READ事件详解及RecvByteBufAllocator\\",\\"image\\":[\\"https://blog.guosgbin.cn/\\"],\\"datePublished\\":\\"2022-02-23T18:34:24.000Z\\",\\"dateModified\\":\\"2023-06-04T09:46:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"headers":[{"level":2,"title":"分析顺序","slug":"分析顺序","link":"#分析顺序","children":[]},{"level":2,"title":"处理 READ 事件相关类的源码分析","slug":"处理-read-事件相关类的源码分析","link":"#处理-read-事件相关类的源码分析","children":[{"level":3,"title":"继承体系","slug":"继承体系","link":"#继承体系","children":[]},{"level":3,"title":"RecvByteBufAllocator 接口","slug":"recvbytebufallocator-接口","link":"#recvbytebufallocator-接口","children":[]},{"level":3,"title":"MaxMessagesRecvByteBufAllocator 接口","slug":"maxmessagesrecvbytebufallocator-接口","link":"#maxmessagesrecvbytebufallocator-接口","children":[]},{"level":3,"title":"DefaultMaxMessagesRecvByteBufAllocator 抽象类","slug":"defaultmaxmessagesrecvbytebufallocator-抽象类","link":"#defaultmaxmessagesrecvbytebufallocator-抽象类","children":[]},{"level":3,"title":"MaxMessageHandle 的成员属性","slug":"maxmessagehandle-的成员属性","link":"#maxmessagehandle-的成员属性","children":[]},{"level":3,"title":"HandleImpl 的成员属性","slug":"handleimpl-的成员属性","link":"#handleimpl-的成员属性","children":[]}]},{"level":2,"title":"客户端处理 READ 事件详细流程","slug":"客户端处理-read-事件详细流程","link":"#客户端处理-read-事件详细流程","children":[{"level":3,"title":"流程概览","slug":"流程概览","link":"#流程概览","children":[]},{"level":3,"title":"重置数据","slug":"重置数据","link":"#重置数据","children":[]},{"level":3,"title":"do...while 循环：获取 ByteBuf","slug":"do-while-循环-获取-bytebuf","link":"#do-while-循环-获取-bytebuf","children":[]},{"level":3,"title":"do...while 循环：读取 Channel 数据","slug":"do-while-循环-读取-channel-数据","link":"#do-while-循环-读取-channel-数据","children":[]},{"level":3,"title":"do...while 循环：校验读取数据量","slug":"do-while-循环-校验读取数据量","link":"#do-while-循环-校验读取数据量","children":[]},{"level":3,"title":"do...while 循环：循环计数自增","slug":"do-while-循环-循环计数自增","link":"#do-while-循环-循环计数自增","children":[]},{"level":3,"title":"do...while 循环：传递 channelRead 事件","slug":"do-while-循环-传递-channelread-事件","link":"#do-while-循环-传递-channelread-事件","children":[]},{"level":3,"title":"do...while 循环：校验 while 条件","slug":"do-while-循环-校验-while-条件","link":"#do-while-循环-校验-while-条件","children":[]},{"level":3,"title":"读取完毕，后续操作","slug":"读取完毕-后续操作","link":"#读取完毕-后续操作","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"读数据缓冲区 ByteBuf 的自适应扩容缩容机制","slug":"读数据缓冲区-bytebuf-的自适应扩容缩容机制","link":"#读数据缓冲区-bytebuf-的自适应扩容缩容机制","children":[{"level":3,"title":"分配 ByteBuf 入口","slug":"分配-bytebuf-入口","link":"#分配-bytebuf-入口","children":[]},{"level":3,"title":"自适应扩容缩容的入口","slug":"自适应扩容缩容的入口","link":"#自适应扩容缩容的入口","children":[]},{"level":3,"title":"自适应扩容缩容的索引表","slug":"自适应扩容缩容的索引表","link":"#自适应扩容缩容的索引表","children":[]},{"level":3,"title":"自适应扩容缩容分析","slug":"自适应扩容缩容分析","link":"#自适应扩容缩容分析","children":[]}]}],"git":{"createdTime":1685871990000,"updatedTime":1685871990000,"contributors":[{"name":"Dylan Kwok","email":"guosgbin@163.com","commits":1}]},"readingTime":{"minutes":19.14,"words":5741},"filePathRelative":"Netty_source/16-客户端处理READ事件详解及RecvByteBufAllocator.md","localizedDate":"2022年2月23日","copyright":{"author":"超威蓝猫 Dylan Kwok"},"autoDesc":true}');export{e as data};
