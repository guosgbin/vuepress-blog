const e=JSON.parse('{"key":"v-34c46270","path":"/Netty_source/11-%E7%BA%BF%E7%A8%8B%E4%BD%93%E7%B3%BB-NioEventLoop%E7%9A%84run%E6%96%B9%E6%B3%95.html","title":"11-线程体系-NioEventLoop的run方法","lang":"zh-CN","frontmatter":{"title":"11-线程体系-NioEventLoop的run方法","date":"2022-02-23T18:38:06.000Z","tags":["Netty"],"categories":["Netty"],"description":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年2月23日18:38:06 V2 重构 2023年05月21日14:50:59 引入 前面文章已经分析了，NioEventLoop 和一个线程绑定并且启动的流程。线程启动最终调用的方法就是 NioEventLoop#run 方法（当然还有别的 Ev...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/Netty_source/11-%E7%BA%BF%E7%A8%8B%E4%BD%93%E7%B3%BB-NioEventLoop%E7%9A%84run%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:title","content":"11-线程体系-NioEventLoop的run方法"}],["meta",{"property":"og:description","content":"版本 内容 时间 ---- ---- ---------------------- V1 新建 2022年2月23日18:38:06 V2 重构 2023年05月21日14:50:59 引入 前面文章已经分析了，NioEventLoop 和一个线程绑定并且启动的流程。线程启动最终调用的方法就是 NioEventLoop#run 方法（当然还有别的 Ev..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.guosgbin.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-04T09:46:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"11-线程体系-NioEventLoop的run方法"}],["meta",{"property":"article:author","content":"超威蓝猫 Dylan Kwok"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:published_time","content":"2022-02-23T18:38:06.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-04T09:46:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11-线程体系-NioEventLoop的run方法\\",\\"image\\":[\\"https://blog.guosgbin.cn/\\"],\\"datePublished\\":\\"2022-02-23T18:38:06.000Z\\",\\"dateModified\\":\\"2023-06-04T09:46:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"headers":[{"level":2,"title":"引入","slug":"引入","link":"#引入","children":[]},{"level":2,"title":"NioEventLoop#run 核心逻辑分析","slug":"nioeventloop-run-核心逻辑分析","link":"#nioeventloop-run-核心逻辑分析","children":[{"level":3,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":3,"title":"查找要执行的任务","slug":"查找要执行的任务","link":"#查找要执行的任务","children":[]},{"level":3,"title":"处理 I/O 事件和其他任务","slug":"处理-i-o-事件和其他任务","link":"#处理-i-o-事件和其他任务","children":[]},{"level":3,"title":"处理 JDK 空循环 bug","slug":"处理-jdk-空循环-bug","link":"#处理-jdk-空循环-bug","children":[]},{"level":3,"title":"关闭执行器的逻辑","slug":"关闭执行器的逻辑","link":"#关闭执行器的逻辑","children":[]},{"level":3,"title":"NioEventLoop#run 整体代码","slug":"nioeventloop-run-整体代码","link":"#nioeventloop-run-整体代码","children":[]}]},{"level":2,"title":"处理 I/O 事件和其他任务","slug":"处理-i-o-事件和其他任务-1","link":"#处理-i-o-事件和其他任务-1","children":[{"level":3,"title":"处理 I/O 事件","slug":"处理-i-o-事件","link":"#处理-i-o-事件","children":[]},{"level":3,"title":"处理其他任务","slug":"处理其他任务","link":"#处理其他任务","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1685871990000,"updatedTime":1685871990000,"contributors":[{"name":"Dylan Kwok","email":"guosgbin@163.com","commits":1}]},"readingTime":{"minutes":15.63,"words":4689},"filePathRelative":"Netty_source/11-线程体系-NioEventLoop的run方法.md","localizedDate":"2022年2月23日","copyright":{"author":"超威蓝猫 Dylan Kwok"},"autoDesc":true}');export{e as data};
