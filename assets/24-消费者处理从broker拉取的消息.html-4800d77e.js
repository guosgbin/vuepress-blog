import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-9568636d.js";const p="/assets/消费者处理broker拉取的消息流程-eddba76e.png",e={},o=t(`<table><thead><tr><th>版本</th><th>内容</th><th>时间</th></tr></thead><tbody><tr><td>V1</td><td>新建</td><td>2023年06月24日22:04:54</td></tr></tbody></table><h2 id="消费者处理-broker-拉取的消息的入口" tabindex="-1"><a class="header-anchor" href="#消费者处理-broker-拉取的消息的入口" aria-hidden="true">#</a> 消费者处理 broker 拉取的消息的入口</h2><p>Consumer 发送异步 RPC 到 broker 端拉取消息，当 broker 端响应给 Consumer 端时，会调用 Consumer 事先准备好的回调方法。</p><p>先看下 Consumer 发送异步 RPC 的位置，MQClientAPIImpl#pullMessageAsync</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">pullMessageAsync</span><span class="token punctuation">(</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> addr<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token keyword">long</span> timeoutMillis<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token class-name">PullCallback</span> pullCallback
<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>remotingClient<span class="token punctuation">.</span><span class="token function">invokeAsync</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> request<span class="token punctuation">,</span> timeoutMillis<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InvokeCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operationComplete</span><span class="token punctuation">(</span><span class="token class-name">ResponseFuture</span> responseFuture<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">RemotingCommand</span> response <span class="token operator">=</span> responseFuture<span class="token punctuation">.</span><span class="token function">getResponseCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">PullResult</span> pullResult <span class="token operator">=</span> <span class="token class-name">MQClientAPIImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">processPullResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">assert</span> pullResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token comment">// 将 pullResult 交给 拉消息结果处理回调对象</span>
                    pullCallback<span class="token punctuation">.</span><span class="token function">onSuccess</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    pullCallback<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// ...... 省略异常情况 ......</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，当 broker 响应消息到 Consumer 时，会解析响应为 PullResult 对象，然后调用 PullCallback 对应的函数去处理。</p><h2 id="pullresult-属性" tabindex="-1"><a class="header-anchor" href="#pullresult-属性" aria-hidden="true">#</a> PullResult 属性</h2><p>在分析 PullCallback#onSuccess 方法之前，我们得知道 broker 返回的 PullResult 有什么内容</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PullResult</span> <span class="token punctuation">{</span>
    <span class="token comment">// 消息拉取状态</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PullStatus</span> pullStatus<span class="token punctuation">;</span>
    <span class="token comment">// 下次拉取的偏移量</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> nextBeginOffset<span class="token punctuation">;</span>
    <span class="token comment">// 消息队列的最小偏移量</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> minOffset<span class="token punctuation">;</span>
    <span class="token comment">// 消息队列的最大偏移量</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> maxOffset<span class="token punctuation">;</span>
    <span class="token comment">// 具体拉取消息的消息列表</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgFoundList<span class="token punctuation">;</span>
    
    <span class="token comment">// ...... 省略 ......</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>PullStatus pullStatus</code>：消息拉取状态；</li><li><code>long nextBeginOffset</code>：broker 返回的下次拉取消息的偏移量，下次那这个偏移量去拉取消息；</li><li><code>long minOffset</code>：当前拉取的消息队列的最小偏移量；</li><li><code>long maxOffset</code>：当前拉取的消息队列的最大偏移量；</li><li><code>List&lt;MessageExt&gt; msgFoundList</code>：当前拉取请求拉取下来的具体的消息列表；</li></ul><p>具体返回的 PullResult 其实是它的子类 PullResultExt</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PullResultExt</span> <span class="token keyword">extends</span> <span class="token class-name">PullResult</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> suggestWhichBrokerId<span class="token punctuation">;</span>
    <span class="token comment">// 从网络中读取消息列表中的属性</span>
    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> messageBinary<span class="token punctuation">;</span>
 
    <span class="token comment">// ...... 省略 ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>long suggestWhichBrokerId</code>：broker 端建议下次去哪个 broker 拉取数据，0 表示从主 broker 节点拉取消息，非 0 表示去从节点拉取消息；</li><li><code>byte[] messageBinary</code>：从 broker 拉取下来的所有的消息的字节数组；</li></ul><h2 id="消息处理" tabindex="-1"><a class="header-anchor" href="#消息处理" aria-hidden="true">#</a> 消息处理</h2><p>关于消息拉取的回调函数 PullCallback 是在 DefaultMQPushConsumerImpl#pullMessage 方法中定义的。这里主要关注拉取消息成功时处理的 PullCallback#onSuccess 方法，先看流程图：</p><p><img src="`+p+`" alt="消费者处理broker拉取的消息流程"></p><h3 id="预处理消息" tabindex="-1"><a class="header-anchor" href="#预处理消息" aria-hidden="true">#</a> 预处理消息</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 预处理</span>
pullResult <span class="token operator">=</span> <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>pullAPIWrapper<span class="token punctuation">.</span><span class="token function">processPullResult</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pullResult<span class="token punctuation">,</span>
    subscriptionData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用 processPullResult 预处理消息，从 broker 拉取的消息都是保存在一个 byte 数组内的，这里主要就是要将 byte 数组解析成一个一个的消息对象，方便我们处理数据。然后根据 tag 的值去进行过滤操作，</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">PullResult</span> <span class="token function">processPullResult</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">MessageQueue</span> mq<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">PullResult</span> pullResult<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token class-name">SubscriptionData</span> subscriptionData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PullResultExt</span> pullResultExt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PullResultExt</span><span class="token punctuation">)</span> pullResult<span class="token punctuation">;</span>

    <span class="token comment">// 更新 pullFromWhichNodeTable 内该 mq 的下次查询推荐的 brokerId</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updatePullFromWhichNode</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> pullResultExt<span class="token punctuation">.</span><span class="token function">getSuggestWhichBrokerId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">PullStatus</span><span class="token punctuation">.</span><span class="token constant">FOUND</span> <span class="token operator">==</span> pullResult<span class="token punctuation">.</span><span class="token function">getPullStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 消息转换成 ByteBUffer</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>pullResultExt<span class="token punctuation">.</span><span class="token function">getMessageBinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 解码</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgList <span class="token operator">=</span> <span class="token class-name">MessageDecoder</span><span class="token punctuation">.</span><span class="token function">decodes</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 客户端再次过滤后的 list</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgListFilterAgain <span class="token operator">=</span> msgList<span class="token punctuation">;</span>
        <span class="token comment">// 客户端按照 tag 值进行过滤</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>subscriptionData<span class="token punctuation">.</span><span class="token function">getTagsSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>subscriptionData<span class="token punctuation">.</span><span class="token function">isClassFilterMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            msgListFilterAgain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// tag 过滤</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>subscriptionData<span class="token punctuation">.</span><span class="token function">getTagsSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        msgListFilterAgain<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// ...... 省略 ......</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgListFilterAgain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> traFlag <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_TRANSACTION_PREPARED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>traFlag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                msg<span class="token punctuation">.</span><span class="token function">setTransactionId</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 给消息添加三个 property， 队列最小 offset，队列最大 offset，消息归属 brokerName</span>
            <span class="token class-name">MessageAccessor</span><span class="token punctuation">.</span><span class="token function">putProperty</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_MIN_OFFSET</span><span class="token punctuation">,</span>
                <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMinOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MessageAccessor</span><span class="token punctuation">.</span><span class="token function">putProperty</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_MAX_OFFSET</span><span class="token punctuation">,</span>
                <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMaxOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            msg<span class="token punctuation">.</span><span class="token function">setBrokerName</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 将再次过滤后的消息 list，保存到 pullResult 中</span>
        pullResultExt<span class="token punctuation">.</span><span class="token function">setMsgFoundList</span><span class="token punctuation">(</span>msgListFilterAgain<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// help gc</span>
    pullResultExt<span class="token punctuation">.</span><span class="token function">setMessageBinary</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> pullResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主要是做三件事情：</p><ol><li>根据 broker 返回的 suggestWhichBrokerId 更新下次去 broker 拉取的节点；</li><li>解码 broker 返回的字节数组为消息集合，然后进行 tag 的消息过滤操作，过滤掉当前消费者没有订阅的 tag 的消息；</li><li>给消息对象 MessageExt 设置三个属性，broker 的 queueId 的最大逻辑偏移量和最小逻辑偏移量，还有 brokerName；</li></ol><h3 id="根据消息的拉取状态做不同的处理" tabindex="-1"><a class="header-anchor" href="#根据消息的拉取状态做不同的处理" aria-hidden="true">#</a> 根据消息的拉取状态做不同的处理</h3><h4 id="正常拉取消息" tabindex="-1"><a class="header-anchor" href="#正常拉取消息" aria-hidden="true">#</a> 正常拉取消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getPullStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">FOUND</span><span class="token operator">:</span> <span class="token comment">// 从服务器正常拉取到消息</span>
        <span class="token comment">// 更新 pullRequest 对象的 nextOffset</span>
        <span class="token keyword">long</span> prevRequestOffset <span class="token operator">=</span> pullRequest<span class="token punctuation">.</span><span class="token function">getNextOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// ...... 省略统计相关业务 ......</span>

        <span class="token keyword">long</span> firstMsgOffset <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 条件成立，说明客户端过滤导致消息全部被过滤了，发起下一次拉消息</span>
            <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestImmediately</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 说明拉取到的消息没有被过滤完</span>
            firstMsgOffset <span class="token operator">=</span> pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// ...... 省略统计相关业务 ......</span>

            <span class="token comment">// 将服务器拉取的消息 list 加入到消费者本地的该 queue 的 processQueue 中</span>
            <span class="token keyword">boolean</span> dispatchToConsume <span class="token operator">=</span> processQueue<span class="token punctuation">.</span><span class="token function">putMessage</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 提交 &quot;消费任务&quot;</span>
            <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService<span class="token punctuation">.</span><span class="token function">submitConsumeRequest</span><span class="token punctuation">(</span>
                    pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    processQueue<span class="token punctuation">,</span>
                    pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    dispatchToConsume<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getPullInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestLater</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">,</span>
                        <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getPullInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestImmediately</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ...... 省略日志打印 ......</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token comment">// ...... 省略其他分支 ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>更新 PullRequest 的下次拉取消息的逻辑偏移量；</li><li>将从 broker 拉取下来的消息添加到消费者本地消费快照队列 ProcessQueue 中；</li><li>提交消费任务到消费服务，也就是 ConsumeMessageService，这里分为两种并发消费服务和顺序消费服务；</li><li>根据配置，将从消息拉取服务 PullMessageService 的阻塞队列中拿的 PullRequest 对象，归还给阻塞队列，这样 PullMessageService 就可以再去发送 RPC 请求到 broker 继续拉取消息了；</li></ol><h4 id="未拉取到消息" tabindex="-1"><a class="header-anchor" href="#未拉取到消息" aria-hidden="true">#</a> 未拉取到消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ...... 省略其他分支 .......</span>
<span class="token keyword">case</span> <span class="token constant">NO_NEW_MSG</span><span class="token operator">:</span> <span class="token comment">// 没有新的消息</span>
<span class="token keyword">case</span> <span class="token constant">NO_MATCHED_MSG</span><span class="token operator">:</span> <span class="token comment">// 没有匹配消息</span>
    pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">correctTagsOffset</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestImmediately</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">case</span> <span class="token constant">OFFSET_ILLEGAL</span><span class="token operator">:</span> <span class="token comment">// 本次 pull 时，使用的 offset 是无效的，也就是 offset &gt; maxOffset || offset &lt; minOffset</span>
    pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pullRequest<span class="token punctuation">.</span><span class="token function">getProcessQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDropped</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 提交 10 秒的延迟任务</span>
    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeTaskLater</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore<span class="token punctuation">.</span><span class="token function">updateOffset</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pullRequest<span class="token punctuation">.</span><span class="token function">getNextOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
                <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">removeProcessQueue</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;executeTaskLater Exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于 NO_NEW_MSG 和 NO_MATCHED_MSG 这两个状态， 主要就是校正消费者消费进度，然后归还 PullRequest 到 PullMessageService 的阻塞对了中。</p><p>关于 OFFSET_ILLEGAL 这个状态，主要原因是本次去 broker 端拉取消息时，使用的 offset 是无效的，也就是 <code>offset &gt; maxOffset || offset &lt; minOffset</code>，其中 maxOffset 和 minOffset 表示 ConsumeQueue 文件的最大逻辑偏移量和最小逻辑偏移量。这个情况比较复杂，主要就是校正 PullRequest 中的消息拉取偏移量，然后将该 PullRequest 对应的本地消费快照 ProcessQueue 的 drop 状态设置为 true，这样当前消费者就不会继续消费这个队列的消息了，而且也不会归还 PullRequest 到 PullMessageService 的阻塞队列，然后将该本地消费快照 ProcessQueue 从负载均衡服务 RebalanceImpl 中移除。</p><p>有个疑问就是，既然没有归还 PullRequest，那么岂不是 topic 的这个队列不会在消费了吗？其实是这个会在消费队列负载均衡服务 RebalanceImpl 中重新给它分配一个消费者中去消费。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>本篇主要分析了是将消息从 broker 拉取下来后的流程，主要就是将 broker 拉取下来的消息添加到本地快照消费队列 ProcessQueue 中去，然后提交一个消费任务到 ConsumeMessageService 消费服务中，消费服务器在 RocketMQ 中分为两种，一是并发消费服务、一是顺序消费服务。具体如何消费，是用户编写的业务代码。</p>`,33),c=[o];function l(u,i){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","24-消费者处理从broker拉取的消息.html.vue"]]);export{d as default};
