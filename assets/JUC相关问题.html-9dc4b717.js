const l=JSON.parse('{"key":"v-849dc9aa","path":"/interviewQA/JUC%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98.html","title":"并发编程和JUC相关问题","lang":"zh-CN","frontmatter":{"title":"并发编程和JUC相关问题","description":"内存模型相关 物理硬件和操作系统的内存模型 1. 计算机的存储设备和处理器的运算速度有几个数量级的差距，所以现代计算器都不得不加入一层或多层读写速度尽可能接近处理器的运算速度的高速缓存来作为内存和处理器之间的缓冲：将运算需要使用的数据复制到缓存中，让运算能快速运行，当运算结束后再从缓存同步回内存之中，这样处理器就无须等待缓慢的内存读写了； 2. 引入高...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/interviewQA/JUC%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:title","content":"并发编程和JUC相关问题"}],["meta",{"property":"og:description","content":"内存模型相关 物理硬件和操作系统的内存模型 1. 计算机的存储设备和处理器的运算速度有几个数量级的差距，所以现代计算器都不得不加入一层或多层读写速度尽可能接近处理器的运算速度的高速缓存来作为内存和处理器之间的缓冲：将运算需要使用的数据复制到缓存中，让运算能快速运行，当运算结束后再从缓存同步回内存之中，这样处理器就无须等待缓慢的内存读写了； 2. 引入高..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T03:53:00.000Z"}],["meta",{"property":"article:author","content":"超威蓝猫 Dylan Kwok"}],["meta",{"property":"article:modified_time","content":"2024-02-28T03:53:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"并发编程和JUC相关问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-28T03:53:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"headers":[{"level":2,"title":"内存模型相关","slug":"内存模型相关","link":"#内存模型相关","children":[{"level":3,"title":"物理硬件和操作系统的内存模型","slug":"物理硬件和操作系统的内存模型","link":"#物理硬件和操作系统的内存模型","children":[]},{"level":3,"title":"Java 内存模型-主内存和工作内存","slug":"java-内存模型-主内存和工作内存","link":"#java-内存模型-主内存和工作内存","children":[]},{"level":3,"title":"Java 内存模型 - 内存间交互操作","slug":"java-内存模型-内存间交互操作","link":"#java-内存模型-内存间交互操作","children":[]}]},{"level":2,"title":"线程的实现和调度","slug":"线程的实现和调度","link":"#线程的实现和调度","children":[{"level":3,"title":"线程的实现？Java 的线程是怎么实现的？","slug":"线程的实现-java-的线程是怎么实现的","link":"#线程的实现-java-的线程是怎么实现的","children":[]},{"level":3,"title":"Java 线程调度？","slug":"java-线程调度","link":"#java-线程调度","children":[]},{"level":3,"title":"Java 与协程？","slug":"java-与协程","link":"#java-与协程","children":[]}]},{"level":2,"title":"并发编程的三大特性","slug":"并发编程的三大特性","link":"#并发编程的三大特性","children":[{"level":3,"title":"并发编程的三大特性","slug":"并发编程的三大特性-1","link":"#并发编程的三大特性-1","children":[]},{"level":3,"title":"Happen-before","slug":"happen-before","link":"#happen-before","children":[]}]},{"level":2,"title":"线程的状态以及状态转换","slug":"线程的状态以及状态转换","link":"#线程的状态以及状态转换","children":[]},{"level":2,"title":"线程之间的协作方式","slug":"线程之间的协作方式","link":"#线程之间的协作方式","children":[{"level":3,"title":"join 方法","slug":"join-方法","link":"#join-方法","children":[]},{"level":3,"title":"wait() notify() notifyAll()","slug":"wait-notify-notifyall","link":"#wait-notify-notifyall","children":[]},{"level":3,"title":"await() signal() signalAll()","slug":"await-signal-signalall","link":"#await-signal-signalall","children":[]},{"level":3,"title":"Thread#sleep 方法和 Object#wait 方法的区别？","slug":"thread-sleep-方法和-object-wait-方法的区别","link":"#thread-sleep-方法和-object-wait-方法的区别","children":[]}]},{"level":2,"title":"volatile 关键字","slug":"volatile-关键字","link":"#volatile-关键字","children":[]},{"level":2,"title":"线程安全的理解","slug":"线程安全的理解","link":"#线程安全的理解","children":[]},{"level":2,"title":"Synchronized 关键字","slug":"synchronized-关键字","link":"#synchronized-关键字","children":[{"level":3,"title":"Synchronized 锁优化？锁升级的流程是什么？","slug":"synchronized-锁优化-锁升级的流程是什么","link":"#synchronized-锁优化-锁升级的流程是什么","children":[]},{"level":3,"title":"Synchronized 有哪些存在的问题？","slug":"synchronized-有哪些存在的问题","link":"#synchronized-有哪些存在的问题","children":[]}]},{"level":2,"title":"CAS","slug":"cas","link":"#cas","children":[{"level":3,"title":"CAS是什么？CAS 有什么缺点？怎么解决这些缺点？","slug":"cas是什么-cas-有什么缺点-怎么解决这些缺点","link":"#cas是什么-cas-有什么缺点-怎么解决这些缺点","children":[]},{"level":3,"title":"自旋 + CAS 操作是什么，有什么缺点？怎么解决？","slug":"自旋-cas-操作是什么-有什么缺点-怎么解决","link":"#自旋-cas-操作是什么-有什么缺点-怎么解决","children":[]}]},{"level":2,"title":"原子类","slug":"原子类","link":"#原子类","children":[{"level":3,"title":"AtomicLong 实现原理是什么？有什么缺点吗？","slug":"atomiclong-实现原理是什么-有什么缺点吗","link":"#atomiclong-实现原理是什么-有什么缺点吗","children":[]},{"level":3,"title":"AtomicLongArray 原子类数组有了解吗？什么原理？","slug":"atomiclongarray-原子类数组有了解吗-什么原理","link":"#atomiclongarray-原子类数组有了解吗-什么原理","children":[]},{"level":3,"title":"AtomicReferenceFieldUpdater 有了解吗？什么原理？使用有什么要注意的？为什么用这个？","slug":"atomicreferencefieldupdater-有了解吗-什么原理-使用有什么要注意的-为什么用这个","link":"#atomicreferencefieldupdater-有了解吗-什么原理-使用有什么要注意的-为什么用这个","children":[]},{"level":3,"title":"LongAdder 原理？和 AtomicLong 比较？","slug":"longadder-原理-和-atomiclong-比较","link":"#longadder-原理-和-atomiclong-比较","children":[]}]},{"level":2,"title":"LockSupport","slug":"locksupport","link":"#locksupport","children":[]},{"level":2,"title":"ReentrantReadWriteLock？","slug":"reentrantreadwritelock","link":"#reentrantreadwritelock","children":[]},{"level":2,"title":"AQS","slug":"aqs","link":"#aqs","children":[{"level":3,"title":"AQS 的小结（重要！！！）","slug":"aqs-的小结-重要","link":"#aqs-的小结-重要","children":[]},{"level":3,"title":"AQS 的概念","slug":"aqs-的概念","link":"#aqs-的概念","children":[]},{"level":3,"title":"AQS 的同步资源是什么？","slug":"aqs-的同步资源是什么","link":"#aqs-的同步资源是什么","children":[]},{"level":3,"title":"AQS 的等待队列？","slug":"aqs-的等待队列","link":"#aqs-的等待队列","children":[]},{"level":3,"title":"AQS 的条件（Condition）队列是什么？","slug":"aqs-的条件-condition-队列是什么","link":"#aqs-的条件-condition-队列是什么","children":[]},{"level":3,"title":"AQS 的条件（Condition）队列实现原理？","slug":"aqs-的条件-condition-队列实现原理","link":"#aqs-的条件-condition-队列实现原理","children":[]}]},{"level":2,"title":"AQS 独占模式","slug":"aqs-独占模式","link":"#aqs-独占模式","children":[{"level":3,"title":"ReentrantLock 原理 -- AQS 的独占模式","slug":"reentrantlock-原理-aqs-的独占模式","link":"#reentrantlock-原理-aqs-的独占模式","children":[]},{"level":3,"title":"什么是公平锁？什么是非公平锁？（重要！！！）","slug":"什么是公平锁-什么是非公平锁-重要","link":"#什么是公平锁-什么是非公平锁-重要","children":[]},{"level":3,"title":"ReentrantLock 的公平锁和非公平锁","slug":"reentrantlock-的公平锁和非公平锁","link":"#reentrantlock-的公平锁和非公平锁","children":[]},{"level":3,"title":"ReentrantLock 是如何响应中断的","slug":"reentrantlock-是如何响应中断的","link":"#reentrantlock-是如何响应中断的","children":[]},{"level":3,"title":"ReentrantLock 是如何支持超时机制的？","slug":"reentrantlock-是如何支持超时机制的","link":"#reentrantlock-是如何支持超时机制的","children":[]},{"level":3,"title":"Synchronized 和 ReentrantLock 的对比？ （重要！！！）","slug":"synchronized-和-reentrantlock-的对比-重要","link":"#synchronized-和-reentrantlock-的对比-重要","children":[]}]},{"level":2,"title":"AQS 的共享模式","slug":"aqs-的共享模式","link":"#aqs-的共享模式","children":[{"level":3,"title":"CountDownLatch 怎么使用？使用场景是什么？","slug":"countdownlatch-怎么使用-使用场景是什么","link":"#countdownlatch-怎么使用-使用场景是什么","children":[]},{"level":3,"title":"CountDownLatch 原理是什么？（重要！！！）","slug":"countdownlatch-原理是什么-重要","link":"#countdownlatch-原理是什么-重要","children":[]},{"level":3,"title":"使用 CountDownLatch 需要注意什么？","slug":"使用-countdownlatch-需要注意什么","link":"#使用-countdownlatch-需要注意什么","children":[]},{"level":3,"title":"CyclicBarrier 原理？","slug":"cyclicbarrier-原理","link":"#cyclicbarrier-原理","children":[]},{"level":3,"title":"CyclicBarrier 和 CountDownLatch 的区别？","slug":"cyclicbarrier-和-countdownlatch-的区别","link":"#cyclicbarrier-和-countdownlatch-的区别","children":[]},{"level":3,"title":"Semaphore 的原理（重要！！！）","slug":"semaphore-的原理-重要","link":"#semaphore-的原理-重要","children":[]},{"level":3,"title":"Semaphore 和 CountDownLatch 的比较？","slug":"semaphore-和-countdownlatch-的比较","link":"#semaphore-和-countdownlatch-的比较","children":[]}]},{"level":2,"title":"线程池相关","slug":"线程池相关","link":"#线程池相关","children":[{"level":3,"title":"为什么要用线程池（重要）","slug":"为什么要用线程池-重要","link":"#为什么要用线程池-重要","children":[]},{"level":3,"title":"为什么不推荐使用 Executors 工厂类来创建线程池？","slug":"为什么不推荐使用-executors-工厂类来创建线程池","link":"#为什么不推荐使用-executors-工厂类来创建线程池","children":[]},{"level":3,"title":"线程池几个核心参数的作用？（重要！）","slug":"线程池几个核心参数的作用-重要","link":"#线程池几个核心参数的作用-重要","children":[]},{"level":3,"title":"核心线程和最大线程数怎么设置？（重要）","slug":"核心线程和最大线程数怎么设置-重要","link":"#核心线程和最大线程数怎么设置-重要","children":[]},{"level":3,"title":"线程池中的任务出现异常了会发生什么？怎么处理？（重要！）","slug":"线程池中的任务出现异常了会发生什么-怎么处理-重要","link":"#线程池中的任务出现异常了会发生什么-怎么处理-重要","children":[]},{"level":3,"title":"线程池的生命周期","slug":"线程池的生命周期","link":"#线程池的生命周期","children":[]},{"level":3,"title":"你们项目中拒绝策略是怎么样的？直接丢弃？（重要！）","slug":"你们项目中拒绝策略是怎么样的-直接丢弃-重要","link":"#你们项目中拒绝策略是怎么样的-直接丢弃-重要","children":[]},{"level":3,"title":"线程池中的核心线程数、最大线程数和任务队列之间的关系是什么？","slug":"线程池中的核心线程数、最大线程数和任务队列之间的关系是什么","link":"#线程池中的核心线程数、最大线程数和任务队列之间的关系是什么","children":[]},{"level":3,"title":"线程池如何优雅地关闭？（重要！）","slug":"线程池如何优雅地关闭-重要","link":"#线程池如何优雅地关闭-重要","children":[]},{"level":3,"title":"你如何监控线程池的运行状态","slug":"你如何监控线程池的运行状态","link":"#你如何监控线程池的运行状态","children":[]},{"level":3,"title":"什么是线程池的预启动策略？为什么要使用预启动策略？（重要！）","slug":"什么是线程池的预启动策略-为什么要使用预启动策略-重要","link":"#什么是线程池的预启动策略-为什么要使用预启动策略-重要","children":[]},{"level":3,"title":"线程池的执行原理（重要！）","slug":"线程池的执行原理-重要","link":"#线程池的执行原理-重要","children":[]},{"level":3,"title":"线程池的线程是怎么回收的","slug":"线程池的线程是怎么回收的","link":"#线程池的线程是怎么回收的","children":[]},{"level":3,"title":"什么场景用线程池？","slug":"什么场景用线程池","link":"#什么场景用线程池","children":[]},{"level":3,"title":"线程池的源码实现原理","slug":"线程池的源码实现原理","link":"#线程池的源码实现原理","children":[]},{"level":3,"title":"调度线程池相关（重要！）","slug":"调度线程池相关-重要","link":"#调度线程池相关-重要","children":[]}]},{"level":2,"title":"CopyOnWriteArrayList写时复制","slug":"copyonwritearraylist写时复制","link":"#copyonwritearraylist写时复制","children":[]},{"level":2,"title":"ConcurrentSkipListMap","slug":"concurrentskiplistmap","link":"#concurrentskiplistmap","children":[]},{"level":2,"title":"ConcurrentHashMap 1.8","slug":"concurrenthashmap-1-8","link":"#concurrenthashmap-1-8","children":[]}],"git":{"createdTime":1709090717000,"updatedTime":1709092380000,"contributors":[{"name":"Dylan Kwok","email":"guosgbin@163.com","commits":2}]},"readingTime":{"minutes":82,"words":24601},"filePathRelative":"interviewQA/JUC相关问题.md","localizedDate":"2024年2月28日","copyright":{"author":"超威蓝猫 Dylan Kwok"},"autoDesc":true}');export{l as data};
